__ This program is not ready yet! __

## forecast

forecast is a query program for the [forecast.io](https://forecast.io)
API. It provides a command line interface which makes weather data for a
configurable location available in the terminal.

Capabilities include:

* Plotting tables with current, hourly and daily weather conditions
* Rendering barplots of temperature and precepitation curves for hourly
  and daily weather forecasts, sunrise and sunset times for daily
  weather forecasts and many more things
* Dumping of the original JSON weather data

### API key

In order to use the API, you need to obtain an API key from forecast.io.
You are able to make 1000 API calls per day free of charge. The
registration interface is [here](https://developer.forecast.io/).

### Configuration file

forecast uses a configuration file in libconfig format. The file is by
default located at
```sh
$HOME/.forecastrc
```
but you may override the location by using the -w flag.

The configuration must contain at least the following settings:

```config
apikey = "";

op = "print";

location: {
  latitude = 52.5161;
  longitude = 13.3770;
};

plot: {
  height = 10;
  bar: {
    width = 4;
    color = "BLACK";
    overlay_color = "RED";
  };
  legend: {
    color = "WHITE";
    labels = "RED";
    texthighlight_color = "RED";
  };
  hourly: {
    succeeding_hours = 18;
  }
};
```

If available, command line parameters take precedence over the config
file settings.

### Synopsis

```
Usage:
  forecast [-CHDchlkv] [OPTIONS]
Options:
  -c|--config    PATH   Configuration file to use
  -d|--dump             Dump the JSON data and a newline to stdout
  -h|--help             Print this message and exit
  -l|--location  CHOORD Query the weather at this location; CHOORD is a string in the format
                        <latitude>:<longitude> where the choordinates are given as floating
                        point numbers
  -m|--mode      MODE   One of print, print-hourly, plot-hourly. Defaults to 'print'
  -k|--key       APIKEY API key to use
  -v|--version          Print program version and exit
```
